// Generated by CoffeeScript 1.6.2
(function() {
  var TodoApp;

  Storage.prototype.setObj = function(key, val) {
    return this.setItem(key, JSON.stringify(val));
  };

  Storage.prototype.getObj = function(key) {
    return JSON.parse(this.getItem(key));
  };

  TodoApp = (function() {
    function TodoApp() {
      this.cacheElements();
      this.bindEvents();
      this.displayItems();
    }

    TodoApp.prototype.cacheElements = function() {
      this.$input = $('.new-todo');
      this.$todoList = $('.todo-list');
      return this.$clearCompleted = $('.clear-completed');
    };

    TodoApp.prototype.bindEvents = function() {
      var _this = this;

      this.$input.on('keyup', function(e) {
        return _this.create(e);
      });
      this.$todoList.on('click', '.destroy', function(e) {
        return _this.destroyItem(e.target);
      });
      this.$todoList.on('change', '.toggle', function(e) {
        return _this.toggleItem(e.target);
      });
      return this.$clearCompleted.on('click', function() {
        return _this.clearCompleted();
      });
    };

    TodoApp.prototype.create = function(e) {
      var randomID, val;

      val = $.trim(this.$input.val());
      if (!(e.which === 13 && val)) {
        return;
      }
      randomID = Math.floor(Math.random() * 999999);
      localStorage.setObj(randomID, {
        id: randomID,
        title: val,
        completed: false
      });
      this.$input.val('');
      return this.displayItems();
    };

    TodoApp.prototype.displayItems = function() {
      var key, _i, _len, _ref, _results;

      this.clearItems();
      _ref = Object.keys(localStorage);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        _results.push(this.addItem(localStorage.getObj(key)));
      }
      return _results;
    };

    TodoApp.prototype.clearItems = function() {
      return this.$todoList.empty();
    };

    TodoApp.prototype.addItem = function(item) {
      var html;

      html = "<li data-id=\"" + item.id + "\" " + (item.completed ? 'class="completed"' : '') + ">\n  <div class=\"view\">\n    <label>\n      <input type=\"checkbox\" " + (item.completed ? 'checked' : '') + " class=\"toggle\"> " + item.title + "\n    </label>\n    <button class=\"destroy\">&times;</button>\n  </div>\n</li>";
      return this.$todoList.append(html);
    };

    TodoApp.prototype.destroyItem = function(elem) {
      var id;

      id = $(elem).closest('li').data('id');
      localStorage.removeItem(id);
      return this.displayItems();
    };

    TodoApp.prototype.toggleItem = function(elem) {
      var id, obj;

      id = $(elem).closest('li').data('id');
      obj = localStorage.getObj(id);
      obj.completed = !obj.completed;
      localStorage.setObj(id, obj);
      return this.displayItems();
    };

    TodoApp.prototype.clearCompleted = function() {
      var key, _i, _len, _ref;

      _ref = Object.keys(localStorage);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        if (localStorage.getObj(key).completed) {
          localStorage.removeItem(key);
        }
      }
      return this.displayItems();
    };

    return TodoApp;

  })();

  $(function() {
    var app;

    return app = new TodoApp();
  });

}).call(this);
